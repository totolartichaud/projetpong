import tkinter as tk
from player import *
from ball import *
import time

class Frames(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)
        self._frame = None
        self.switch_frame(Menu)

    def switch_frame(self, frame_class):
        new_frame = frame_class(self)
        if self._frame is not None:
            self._frame.grid_forget()
        self._frame = new_frame
        self._frame.rowconfigure(0, weight=1)
        self._frame.columnconfigure(0, weight=1)
        self._frame.grid(row=0, column=0, columnspan=4, padx=0, pady=0)


class Menu(tk.Frame):
    def __init__(self, master):
        tk.Frame.__init__(self, master)
        tk.Label(self, text='PONG - Accueil').grid(row=0,ipadx=450)
        tk.Button(self, text='Jouer', command=lambda: master.switch_frame(Jeu)).grid()
        tk.Button(self, text="Fermer", command=master.destroy).grid()


class Jeu(tk.Frame):
    def __init__(self, master):
        tk.Frame.__init__(self, master)
        width = 1000
        height = 500
        canvas = tk.Canvas(self, width=width, height=height, background="black")
        canvas.grid(column=0, row=1, columnspan=4, sticky="news")

        ball = Ball(canvas, 15, 5)

        player = Player("Joueur 1", canvas, 20, 100, 0)
        player2 = Player("Joueur 2", canvas, 20, 100, 1)
        Jeu.p1s = tk.IntVar()
        Jeu.p2s = tk.IntVar()
        tk.Label(self, textvariable=Jeu.p1s, width=10).grid(column=0, row=0, sticky='w')
        tk.Label(self, textvariable=Jeu.p2s, width=10).grid(column=2, row=0, sticky='e')


        canvas.bind_all('<z>', player.up)
        canvas.bind_all('<s>', player.down)

        canvas.bind_all('<o>', player2.up)
        canvas.bind_all('<l>', player2.down)
        Jeu.start_time = time.time()
        Jeu.oui = True
        def checkpoint():  # Check point
            coords = canvas.coords(ball.ball)

            if Jeu.oui == True:
                canvas.after(34, checkpoint)
                if coords[3] < 0 or coords[1] > int(canvas['height']) - 40:
                    ball.y_speed = -ball.y_speed

                collision = canvas.find_overlapping(coords[0], coords[1], coords[2], coords[3])
                if collision != (1,):
                    ball.x_speed = -ball.x_speed

                if coords[0] > int(canvas['width']):
                    if Jeu.p1s.get() < 5 - 1:
                        Jeu.p1s.set(Jeu.p1s.get()+1)
                        print("Joueur 1 : ", Jeu.p1s.get())
                        canvas.move(ball.ball, -500, 0)
                        ball.x_speed = -ball.x_speed
                        ball.y_speed = -ball.y_speed
                        canvas.unbind_all('<s>')
                        canvas.unbind_all('<z>')
                        canvas.bind_all('<z>', player2.up)
                        canvas.bind_all('<s>', player2.down)
                        canvas.unbind_all('<Down>')
                        canvas.unbind_all('<Up>')
                        canvas.bind_all('<Up>', player.up)
                        canvas.bind_all('<Down>', player.down)
                    else:
                        Jeu.oui = False
                        Jeu.p1s.set(Jeu.p1s.get()+1)
                        canvas.unbind_all('<s>')
                        canvas.unbind_all('<z>')
                        canvas.unbind_all('<Down>')
                        canvas.unbind_all('<Up>')
                        canvas.delete(ball.ball)
                        canvas.after_cancel(checkpoint)
                        master.switch_frame(EndScreen)

                if coords[2] < 0:
                    if Jeu.p2s.get() < 5 - 1:
                        Jeu.p2s.set(Jeu.p2s.get()+1)
                        print("Joueur 2 : ", Jeu.p2s.get())
                        canvas.move(ball.ball, 500, 0)
                        ball.x_speed = -ball.x_speed
                        ball.y_speed = -ball.y_speed
                        canvas.unbind_all('<s>')
                        canvas.unbind_all('<z>')
                        canvas.bind_all('<z>', player2.up)
                        canvas.bind_all('<s>', player2.down)
                        canvas.unbind_all('<Down>')
                        canvas.unbind_all('<Up>')
                        canvas.bind_all('<Up>', player.up)
                        canvas.bind_all('<Down>', player.down)
                    else:
                        Jeu.oui = False
                        Jeu.p2s.set(Jeu.p2s.get()+1)
                        canvas.unbind_all('<s>')
                        canvas.unbind_all('<z>')
                        canvas.unbind_all('<Down>')
                        canvas.unbind_all('<Up>')
                        canvas.delete(ball.ball)
                        canvas.after_cancel(checkpoint)
                        master.switch_frame(EndScreen)
        checkpoint()
        

class EndScreen(tk.Frame):
    def __init__(self, master):
        tk.Frame.__init__(self, master)
        tk.Label(self, text="Score final : ").pack(side="top", fill="x", pady=10)
        tk.Label(self, text="Joueur 1 : ").pack(side="top", fill="x", pady=10)
        tk.Label(self, text=Jeu.p1s.get(), width=10).pack(side="top", fill="x", pady=10)
        tk.Label(self, text="Joueur 2 : ").pack(side="top", fill="x", pady=10)
        tk.Label(self, text=Jeu.p2s.get(), width=10).pack(side="top", fill="x", pady=20)
        if Jeu.p1s.get() == 5:
            tk.Label(self, text="Joueur 1 gagne ! ").pack(side="top", fill="x", pady=10)
        else:
            tk.Label(self, text="Joueur 2 gagne ! ").pack(side="top", fill="x", pady=10)
        tk.Button(self, text="Retour à l'écran principal", command=lambda: master.switch_frame(Menu)).pack()
        e = time.time() - Jeu.start_time
        tk.Label(self, text="Temps écoulé : {:.0f}:{:.0f}:{:02f}".format(e // 3600, (e % 3600 // 60), e % 60)).pack(side="top", fill="x", pady=10)


if __name__ == "__main__":
    app = Frames()
    app.mainloop()
